복습 ) 
mysql >데이터베이스 > 테이블 > 데이터 
해석 : 데이터베이스 안에 테이블이 있고, 테이블안에는 데이터가 있다!


1. 데이터를 저장하는 프로그램을 배우는 것!
	=>데이터베이스 

2. SQL 이라는 문법을 통해서 데이터를 가져와야 함.
** 정보처리기사 준비하시는 분들은 (필기 단골 문제)
***DDL (Data Definition Language)
	공통점 : table 을 관리하는 명령어
		-CREATE
		-DROP
		-ALTER
*****	DML(Data Manipulation Language) (가장 많이 사용할것)
	공통점 : table 안에 있는 데이터를 관리하는 명령어
	-SELECT	
	-DELETE
	-INSERT	
	-UPDATE	
DCL (Data Control Language)
	공통점 : 데이터베이스 관리 
	- GRANT
	- REVOKE

 


★관계 연산자 
->
>,<,<=,>=,=!=(다르다)

*****논리 연산자(엄청 많이 쓰일거..)
and, or
and = 두개가 참일때, 
이름 홍길동 and 나이 : 50

or 둘중 하나만 맞아도 true

>or 아이디 는 맞는데 비번 틀려도 로그인 되는 (한가지 조건 true) 

 



localhost > database > tables >
emp 테이블을 클릭하면 엔티티(테이블과 같은 말.) 관계도 가 뜬다. (밥 = 데이터, 그릇 = 테이블) 테이블 안에 있는 여러가지를 컬럼이라고 한다.(ENAME, JOB, MGR,SAL.....)
emp 테이블 안에 네모 있고 열쇠있는것을 PK(Primary Key, 고유 데이터,주민번호 개념) 라고 한다.
------------------------------------------------------------------------------
다음 주 나올 시험 입니다.▼▼▼▼▼▼▼▼▼▼▼
--문법--

SELECT (셀렉트 이름 다음 컬럼 이름이 온다.)
	<컬럼이름>,	(콤마 넣기)
	<컬럼 이름>,	
	...n

FROM 	(어디 출신인가..?)
	<테이블 이름>,

WHERE (안쓰면 데이터 모두 조회, 필터링 기능)
	< 조건 >

NULL 해당값에 값을 아예 안넣은 상태 (데이터를 안넣었음을 의미)


관계형은 삭제가 엄격하여 delete는 다음에

★★★★★★★★★★★
from 먼저 보고 where 보고 select 보고 order by(정렬) 마지막
★★★★★★★★★★★

order by : 맨 마지막에 실행되는 문법. 가능한 사용 안하는게 좋다.

--------------------------------------------------------------------------------

<emp 테이블 컬럼 뜻>
-MGR : 사수번호
-HIREDATE : 고용날짜
-SAL : 월급
-COMM : 보너스
-DEPTNO :부서번호

-------------------------------------------------------------------------------------
--job 이 manager인
--사람의 이름과 급여를
-- 모두 조회하시오.
-- hint) 문자를 조회 "",

select 
	ENAME,
	SAL		//마지막 부분은 컴마 제거
from emp 
where job = "MANAGER";
--------------------------------------------------관계 연산자
--급여가 1000 달러 이상인
--사람의 이름과 직업를
-- 모두 조회하시오.
-- hint) 문자를 조회 "",


select 
	ENAME,
	JOB 
	
from emp 
where  SAL >= 1000;

-------------------------------------------------------count
<숫자만 조회 하기  (count 함수)>

select 
	count(*) 
	
from emp 
where  SAL >= 1000;
----------------------------------------------------as
<별칭 넣기>

select 
	count(*) as '총 합'    <= as '' 별칭
	
from emp 
where  SAL >= 1000;

--------------------------------------------------
<사원 이름 넣기>

select 
	ename as '사원 이름'
	
from emp 
where  SAL >= 1000;

---------------------------------------------------------where

<1987 년 이후 입사한 사람 찾기>

select 
	ename as '사원 이름'
	
from emp 
where  HIREDATE >= '1987-06-28';

-----------------------------------------------------and

--입사날짜가 1981-02-20 ~ 1981-12-03 입사한
--사람의 이름과 직업, 부서번호를
-- 모두 조회하시오.
-- hint) 문자를 조회 "",


select 
	ename as '사원 이름',
	job as '직업',
	deptno as '부서번호'
	
from emp 
where  
	HIREDATE >= '1981-02-20' 
and 
	HIREDATE <= '1981-12-03';
--------------------------------------------order by

<내림차순 정렬>
select 
	ename, 
	sal
	
from emp 
order by SAL desc 



----------------------------- 
<오름차순 정렬>

select 
	ename, 
	sal
	
from emp 
order by SAL asc 				//dsc , asc 안하면 오름차순 정렬 , 안보이지만 <asc : default 값이 지정 되어있는것.)

-----------------------


-------------------------------------------------null
<null 조회하기>

select 
	ename,
	sal,
	comm
	
from emp 
where comm is null 
--------------------------------------------------- 
<null 이 아닌 사람 조회하기>
select 
	ename,
	sal,
	comm
	
from emp 
where comm is not null 
--------------------------------------------------order by

--comm(보너스)가 null이 아닌 사원의
--사원 이름, 부서번호, 입사날짜를 
--입사 날짜 오름차순 으로 정렬 및 조회.
--desc 내림차순 
-- asc 오름차순


select 
	ename'이름',
	deptno'부서번호',
	hiredate'입사날짜'
	
from emp 
where comm is not null 

order by hiredate  
------------------------------------------

실무에서는 이름 을 조회할때 관계연산자 잘 안씀
select 
	job
	
from emp 
where ename = 'smith'
----------------------------------- like
select 
	job
	
from emp 
where ename like 'smith'

---------------------------
좋지 않은 코드 (중복된 코드는 좋지 않다.) like 를 사용해서 고쳐보기
select 
	job
	
from emp 
where ename = 'allen'
or ename = 'adams'


------------------------------------------------
<이름이 A로 시작하는 사람 조회>    like 사용 


select 
	job,
	ename
	
from emp 
where ename like 'A%'
--------------------------------
<L이 중복 된 사람 찾기 >
select 
	ename,
	job
	
from emp 
where ename like '%L%L%'

-------------------------------------insert
insert into (어디 테이블에 데이터 insert 할거니?)
insert 밑에 values 넣어서 추가할 데이터 적기.
<테이블에 데이터 추가 하기 >
insert into emp
(empno,ename,job,mgr,HIREDATE,sal,comm,DEPTNO)

values
(8000,'김보겸','salesman',7369,'1980-12-17',5000,1000,30)

---------------------------------------values
홍길동 데이터 추가, 하는데 홍길동은 보너스(comm) 가 없다. comm= null

insert into emp
(empno,ename,job,mgr,HIREDATE,sal,DEPTNO)

values
(8001,'홍길동','salesman',7369,'1980-12-17',5000,30)

----------------------------------------------------update 

update emp<테이블 이름>
set ename = '정우성' (홍길동이 정우성으로 개명 하였는데, 이상태에서 실행 시키면 모든 테이블 이름이 정우성이 되버려..★업데이트 할때 where 안오면...큰일남★...auto commit 여부)
where EMPNO = 8001; (사원번호 8001 번 을 업데이트 한다.where 절 꼭 써줘야 함!!!!이렇기 때문에 pk가 필요한것..사실 update 라는 것은 없다. delete 이후 insert 이다.)

-- 우성이가 직업하고 월급 변경요청

update emp 
set 
	job = 'MANAGER',
	SAL = 8000
where EMPNO = 8001;

-----------------------------------------------------
보너스 총 합 구하기 

select 
	sum(comm) as '보너스 총합'
from emp

----------------------------------------------------
보너스 평균 구하기 

select 
	avg(comm) as '보너스 평균'
from emp
-----------------------------------------------------
고액 연봉자 (max,min)

select 
	max(sal) 
from emp



------------------
배운 내용 중간정리
1.count()
2.sum
3.avg
4.max
5.min
--------------예제

--직업이 manager인 사람들의
--급여 평균을 
--조회하시오.


---------------------
입사 날짜가 1987-06-28 이상인
-- 사람들의 수와 급여 평균을 조회하시오.

---------------

--직업이 CLERK 인 사원 중 
--최소급여를 받고있는
--사원의 이름과 입사날짜를 조회하시오.

----------------------------------------------------------------------
점심
---------------------------
select
delete
update
insert

from
where
order by

and
or

is null
is not null

like




각 부서들 받는 급여 통계 내기

**
select 
	job,
	sum(SAL) as '월급 총 합'
from emp 
group by job

--------------------------------having (where 절에는 통계 함수를 못씀.)
select 
	job,
	sum(SAL) as '월급 총 합'
from emp 
group by job
having sum(sal) > 6000 '총 합 이6000달러 초과'
--------------------------------------------


select 
	max(sal),
	ENAME,
	job 
from emp 
where JOB = 'manager'
group by DEPTNO
having max(SAL) >= 5000

havig group 이 나오면 순서가 바뀐다.

from
where 
group
having
select 
--------------------------
select 
	max(sal),
	ENAME,
	job 
from emp 
where JOB = 'manager'
group by DEPTNO
having max(SAL) >= 5000
order by
-----------------

그룹핑 안되는걸로 그룹핑 하면 제일 상단에 있는 사람이 온다.
group by 가능한것만 .


--각 부서별(deptno) 
--평균급여,총 인원,최고급여,최소급여 
--조회
select 
	deptno,
	avg(sal),
	count(*),
	max(sal),
	min(sal)
	
from emp 

group by deptno



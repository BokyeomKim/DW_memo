(제네릭&컬렉션즈)
연관된 데이터들을 관리하기 위해서 배열을 사용,
int arr[] = [1,3,4,10,10] ; //배열 선언방법1.
int arr[] = new int[20]; //배열 선언방법 2. 
 
배열에는 몇가지 불편한 점이 있었는데, 그 중의 하나가 한번 정해진
배열의 크기를 변경할 수 없다는 점이다.

이러한 불편함을 컬렉션즈를 사용하면 줄어든다.
자료구조 공부 없이도 쉽게 코딩할 수 있게 되었다.

컬렉션즈???
컬렉션즈 프레임워크라는 것은 다른 말로는 
컨테이너라고도 부른다. 
즉, 값을 담는 그릇이라는 의미.
그런데 그 값의 성격에 따라서 컨테이너의 성격이 조금씩
달라진다.
자바에서는 다양한 상황에서 사용할 수 있는 다양한 컨테이너를
제공하는데 이것을 컬렉션즈 프레임워크라고 부른다.

Collection 
-Set
-List
-Queue

Map

Collection 과 Map 이라는 최상위 카테고리가 있고, 그 아래에
다양한 컬렉션들이 존재한다. 


**컬렉션 종류
ArrayList, HashMap,HashSet 이 대표적이고,
ArrayList 를 정말 많이 사용함.

생성자 
1. 리턴타입 없고
2. 생성자 이름은 클래스 이름과 동일



ArrayList<String>list = new ArrayList<String>();
<>: 제네릭
제네릭<> 안에 지정된 데이터 타입에 의해서
ArrayList 결정된다.

**<> 안에는 클래스 만 올 수 있다.

int ->integer
String 
double -> Double

결론 : <> 제네릭이고,  <>안에는 클래스만 올수있구나~~


---------------------------------------------------------------------
배열x
컬렉션즈 o

C언어 <- 컬렉션즈(x)
JAVA
Python(컬렉션즈), JavaScript(TypeScript) (컬렉션즈)

프로그래밍 을 하려면 자료구조를 알아야함.
STACK, HEAP, 큐....

코딩을 하기전에 자료구조를 공부

자료구조 ->C언어 or JAVA  


정적타입, 동적타입

동적타입 : 클래스
(heap 메모리 공간에 저장)
저장될 때 고유번호를 받음.
그 번호가 메모리 주소.
번호를 가지게 됨.

String == 문자를 비교하는게 x 
	주소 비교


equals ( ) 문자 비교 !